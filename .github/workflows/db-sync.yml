name: Database Sync

on:
  push:
    paths:
      - '**.sql'
    branches:
      - main  # 或者你的主分支名称
  workflow_dispatch:

jobs:
  sync-database:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
      
      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Execute database sync
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          # 创建临时脚本文件
          cat << 'EOF' > sync_db.sh
          #!/bin/bash
          
          # 删除所有表
          mysql -u $DB_USER -p$DB_PASSWORD $DB_NAME -e "
            SET FOREIGN_KEY_CHECKS = 0;
            SET GROUP_CONCAT_MAX_LEN=32768;
            SET @tables = NULL;
            SELECT GROUP_CONCAT('\`', table_name, '\`') INTO @tables
            FROM information_schema.tables
            WHERE table_schema = '$DB_NAME';
            SET @tables = CONCAT('DROP TABLE IF EXISTS ', @tables);
            PREPARE stmt FROM @tables;
            EXECUTE stmt;
            DEALLOCATE PREPARE stmt;
            SET FOREIGN_KEY_CHECKS = 1;"
          
          # 执行所有SQL文件
          for sql_file in *.sql; do
            if [ -f "$sql_file" ]; then
              echo "Executing $sql_file..."
              mysql -u $DB_USER -p$DB_PASSWORD $DB_NAME < "$sql_file"
            fi
          done
          EOF
          
          # 将脚本和SQL文件复制到服务器并执行
          chmod +x sync_db.sh
          export SSHPASS=${{ secrets.SERVER_PASSWORD }}
          # 先在服务器上创建目录
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "mkdir -p ~/db_sync"
          sshpass -e scp -o StrictHostKeyChecking=no -r ./*.sql sync_db.sh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:~/db_sync/
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "cd ~/db_sync && ./sync_db.sh"
